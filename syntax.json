{
 "type": "Program",
 "body": [
  {
   "type": "FunctionDeclaration",
   "id": {
    "type": "Identifier",
    "name": "test"
   },
   "params": [
    {
     "type": "Identifier",
     "name": "a"
    },
    {
     "type": "Identifier",
     "name": "b"
    },
    {
     "type": "Identifier",
     "name": "c"
    }
   ],
   "defaults": [],
   "body": {
    "type": "BlockStatement",
    "body": [
     {
      "type": "VariableDeclaration",
      "declarations": [
       {
        "type": "VariableDeclarator",
        "id": {
         "type": "Identifier",
         "name": "d"
        },
        "init": {
         "type": "BinaryExpression",
         "operator": "+",
         "left": {
          "type": "Identifier",
          "name": "a"
         },
         "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2"
         }
        }
       }
      ],
      "kind": "var"
     },
     {
      "type": "ExpressionStatement",
      "expression": {
       "type": "CallExpression",
       "callee": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
         "type": "Identifier",
         "name": "console"
        },
        "property": {
         "type": "Identifier",
         "name": "log"
        }
       },
       "arguments": [
        {
         "type": "Identifier",
         "name": "a"
        },
        {
         "type": "Identifier",
         "name": "b"
        },
        {
         "type": "Identifier",
         "name": "c"
        }
       ]
      }
     },
     {
      "type": "ReturnStatement",
      "argument": {
       "type": "BinaryExpression",
       "operator": "/",
       "left": {
        "type": "BinaryExpression",
        "operator": "*",
        "left": {
         "type": "Identifier",
         "name": "b"
        },
        "right": {
         "type": "Identifier",
         "name": "c"
        }
       },
       "right": {
        "type": "Identifier",
        "name": "d"
       }
      }
     }
    ]
   },
   "generator": false,
   "expression": false
  }
 ]
}